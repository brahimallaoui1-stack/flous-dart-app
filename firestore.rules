rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      // Users can read/write their own profile
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /groups/{groupId} {
      // A user can read a specific group document if they are a member.
      allow get: if request.auth != null && resource.data.members.size() > 0 && request.auth.uid in resource.data.members;
      
      // A user can query the groups collection ONLY if they are filtering by their own admin ID.
      // This is needed for the "check existing group" feature on the create page.
      allow list: if request.auth != null && request.query.get("where")[0][0] == "admin" && request.query.get("where")[0][2] == request.auth.uid;
      
      // A user can create a group if they set themselves as the admin.
      allow create: if request.auth != null && request.resource.data.admin == request.auth.uid;

      // A user can update a group if they are a member.
      allow update: if request.auth != null && request.auth.uid in resource.data.members;

      // A user can delete a group if they are the admin and the group is waiting for members.
      allow delete: if request.auth != null && request.auth.uid == resource.data.admin && resource.data.status == 'En attente';
    }
  }
}